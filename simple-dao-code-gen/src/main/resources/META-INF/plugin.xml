<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.6 -->

<plugin>
  <name>simple-dao-codegen</name>
  <description>Parent pom providing dependency and plugin management for applications built with Maven</description>
  <groupId>com.github.Levin-Li.simple-dao</groupId>
  <artifactId>simple-dao-codegen</artifactId>
  <version>2.2.28-SNAPSHOT</version>
  <goalPrefix>simple-dao-codegen</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>gen-code</goal>
      <description>扫描当前项目构建后的输出目录，发现目录中的 jpa 实体类，尝试自动生成服务类、控制器类、POM 文件、模块插件类、SpringBoot配置类 、 SpringBoot 启动文件</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.levin.commons.dao.codegen.plugins.CodeGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>adminUiModuleDirName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>admin-ui
如果目录不存在，则会自动创建</description>
        </parameter>
        <parameter>
          <name>allowArtifactIds</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的构件ID清单
&lt;p&gt;
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowKeywords</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowPackageTypes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的项目packaging类型
&lt;p&gt;
空为没有限制</description>
        </parameter>
        <parameter>
          <name>allowScripts</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的匹配脚本
&lt;p&gt;
如果脚本返回 false，则不允许执行
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>apiModuleDirName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>生成的控制器类的存放位置
如果目录不存在，则会自动创建</description>
        </parameter>
        <parameter>
          <name>codeGenParams</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>代码生成的附加参数</description>
        </parameter>
        <parameter>
          <name>entitiesModuleDirName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>实体类的模块目录名称
如果pom 模块的目录名称如果等于 entitiesModuleDirName 指定的值，则表示这个模块都是实体类
那么就会在 pom 模块所在的同级目录 【servicesModuleDirName  apiModuleDirName】中生成服务类和控制器类</description>
        </parameter>
        <parameter>
          <name>forceSplitDir</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否强制拆分模块，就是强制把服务类和控制器类生成在 servicesModuleDirName 和  apiModuleDirName 自动的目录中
默认不强制拆分，自动处理</description>
        </parameter>
        <parameter>
          <name>independentPluginClassLoader</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件的类加载器是否是独立</description>
        </parameter>
        <parameter>
          <name>isPrintException</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否打印异常</description>
        </parameter>
        <parameter>
          <name>keyword</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mavenSession</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mergeParamsIntoScriptContext</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否把所有的参数直接合并到脚本上下文中
默认是不并入</description>
        </parameter>
        <parameter>
          <name>moduleName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>模块名称
&lt;p&gt;
默认自动获取</description>
        </parameter>
        <parameter>
          <name>modulePackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>强制指定模块的包名
默认会自动识别</description>
        </parameter>
        <parameter>
          <name>onlyExecutionRoot</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件仅在构建命令启动的模块中执行</description>
        </parameter>
        <parameter>
          <name>servicesModuleDirName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>生成的服务类的存放位置
&lt;p&gt;
如果目录不存在，则会自动创建</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>为 true 跳过插件的执行</description>
        </parameter>
        <parameter>
          <name>testcaseModuleDirName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>testcase
如果目录不存在，则会自动创建</description>
        </parameter>
        <parameter>
          <name>vars</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>自定义变量</description>
        </parameter>
      </parameters>
      <configuration>
        <adminUiModuleDirName implementation="java.lang.String" default-value="admin-ui"/>
        <apiModuleDirName implementation="java.lang.String" default-value="api"/>
        <entitiesModuleDirName implementation="java.lang.String" default-value="entities"/>
        <forceSplitDir implementation="boolean" default-value="false"/>
        <mavenProject implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <mavenSession implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <servicesModuleDirName implementation="java.lang.String" default-value="services"/>
        <testcaseModuleDirName implementation="java.lang.String" default-value="testcase"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>gen-project-template</goal>
      <description>生成项目模板</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.levin.commons.dao.codegen.plugins.ProjectTemplateGeneratorMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>allowArtifactIds</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的构件ID清单
&lt;p&gt;
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowKeywords</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowPackageTypes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的项目packaging类型
&lt;p&gt;
空为没有限制</description>
        </parameter>
        <parameter>
          <name>allowScripts</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的匹配脚本
&lt;p&gt;
如果脚本返回 false，则不允许执行
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>independentPluginClassLoader</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件的类加载器是否是独立</description>
        </parameter>
        <parameter>
          <name>isPrintException</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否打印异常</description>
        </parameter>
        <parameter>
          <name>keyword</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mavenSession</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mergeParamsIntoScriptContext</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否把所有的参数直接合并到脚本上下文中
默认是不并入</description>
        </parameter>
        <parameter>
          <name>modulePackageName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>模块包名
如果没有配置，则自动获取 pom 文件中定义的 GroupId</description>
        </parameter>
        <parameter>
          <name>onlyExecutionRoot</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件仅在构建命令启动的模块中执行</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>为 true 跳过插件的执行</description>
        </parameter>
        <parameter>
          <name>subModuleName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>生成的子模块名称
如果为空，则表示示例代码生成在当前模块,不会创建子模块
如果当前模块不是 pom 模块，则subModuleName名称没有意义，也不会创建子模块。</description>
        </parameter>
        <parameter>
          <name>vars</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>自定义变量</description>
        </parameter>
      </parameters>
      <configuration>
        <mavenProject implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <mavenSession implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>run-groovy</goal>
      <description>http协议明确规定，put、get、delete请求都是具有幂等性的，而post为非幂等性的。
所以一般插入新数据的时候使用post方法，更新数据库时用put方法</description>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.levin.commons.dao.codegen.plugins.GroovyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>allowArtifactIds</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的构件ID清单
&lt;p&gt;
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowKeywords</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowPackageTypes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的项目packaging类型
&lt;p&gt;
空为没有限制</description>
        </parameter>
        <parameter>
          <name>allowScripts</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的匹配脚本
&lt;p&gt;
如果脚本返回 false，则不允许执行
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>classpaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>为 groovy运行环境增加的类路径
&lt;p&gt;
jar包,zip包，或是目录</description>
        </parameter>
        <parameter>
          <name>contentMergeFiles</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>需要加载并且合并到txtScripts的groovy 文件</description>
        </parameter>
        <parameter>
          <name>genTmpFile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否生成临时的 groovy 文件</description>
        </parameter>
        <parameter>
          <name>groovyFiles</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>需要加载 groovy 文件集</description>
        </parameter>
        <parameter>
          <name>independentPluginClassLoader</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件的类加载器是否是独立</description>
        </parameter>
        <parameter>
          <name>isPrintException</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否打印异常</description>
        </parameter>
        <parameter>
          <name>keyword</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mavenSession</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mergeParamsIntoScriptContext</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否把所有的参数直接合并到脚本上下文中
默认是不并入</description>
        </parameter>
        <parameter>
          <name>onlyExecutionRoot</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件仅在构建命令启动的模块中执行</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>为 true 跳过插件的执行</description>
        </parameter>
        <parameter>
          <name>txtScripts</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>要执行的groovy脚本文本</description>
        </parameter>
        <parameter>
          <name>vars</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>自定义变量</description>
        </parameter>
      </parameters>
      <configuration>
        <mavenProject implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <mavenSession implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>run-method</goal>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.levin.commons.dao.codegen.plugins.RunMethodMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>allowArtifactIds</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的构件ID清单
&lt;p&gt;
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowKeywords</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowPackageTypes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的项目packaging类型
&lt;p&gt;
空为没有限制</description>
        </parameter>
        <parameter>
          <name>allowScripts</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的匹配脚本
&lt;p&gt;
如果脚本返回 false，则不允许执行
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>className</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>independentPluginClassLoader</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件的类加载器是否是独立</description>
        </parameter>
        <parameter>
          <name>isPrintException</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否打印异常</description>
        </parameter>
        <parameter>
          <name>keyword</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mavenSession</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mergeParamsIntoScriptContext</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否把所有的参数直接合并到脚本上下文中
默认是不并入</description>
        </parameter>
        <parameter>
          <name>methodName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>methodParams</name>
          <type>java.lang.Object[]</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>onlyExecutionRoot</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件仅在构建命令启动的模块中执行</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>为 true 跳过插件的执行</description>
        </parameter>
        <parameter>
          <name>vars</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>自定义变量</description>
        </parameter>
      </parameters>
      <configuration>
        <mavenProject implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <mavenSession implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>run-ssh-groovy</goal>
      <requiresDependencyResolution>compile+runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.levin.commons.dao.codegen.plugins.GroovySShMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>allowArtifactIds</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的构件ID清单
&lt;p&gt;
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowKeywords</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>allowPackageTypes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的项目packaging类型
&lt;p&gt;
空为没有限制</description>
        </parameter>
        <parameter>
          <name>allowScripts</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的匹配脚本
&lt;p&gt;
如果脚本返回 false，则不允许执行
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>classpaths</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>为 groovy运行环境增加的类路径
&lt;p&gt;
jar包,zip包，或是目录</description>
        </parameter>
        <parameter>
          <name>contentMergeFiles</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>需要加载并且合并到txtScripts的groovy 文件</description>
        </parameter>
        <parameter>
          <name>genTmpFile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否生成临时的 groovy 文件</description>
        </parameter>
        <parameter>
          <name>groovyFiles</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>需要加载 groovy 文件集</description>
        </parameter>
        <parameter>
          <name>host</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>independentPluginClassLoader</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件的类加载器是否是独立</description>
        </parameter>
        <parameter>
          <name>isPrintException</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否打印异常</description>
        </parameter>
        <parameter>
          <name>keyword</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>允许执行的关键字
如果没有，则默认允许所有</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mavenSession</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mergeParamsIntoScriptContext</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>是否把所有的参数直接合并到脚本上下文中
默认是不并入</description>
        </parameter>
        <parameter>
          <name>onlyExecutionRoot</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>插件仅在构建命令启动的模块中执行</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>pemPrivateKey</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>port</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>为 true 跳过插件的执行</description>
        </parameter>
        <parameter>
          <name>txtScripts</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>要执行的groovy脚本文本</description>
        </parameter>
        <parameter>
          <name>username</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>vars</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>自定义变量</description>
        </parameter>
      </parameters>
      <configuration>
        <host implementation="java.lang.String" default-value="${ssh.host}"/>
        <mavenProject implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <mavenSession implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <password implementation="java.lang.String" default-value="${ssh.password}"/>
        <port implementation="int" default-value="${ssh.port}"/>
        <username implementation="java.lang.String" default-value="${ssh.username}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.dependencies.resolve.DependencyResolver</role>
          <field-name>dependencyResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.transfer.repository.RepositoryManager</role>
          <field-name>repositoryManager</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>com.github.Levin-Li.simple-dao</groupId>
      <artifactId>simple-dao-annotations</artifactId>
      <type>jar</type>
      <version>2.2.28-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.6.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.10</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.6.3</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.4</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.6.3</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.4</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.6.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.6.3</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-lightweight</artifactId>
      <type>jar</type>
      <version>3.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-shared</artifactId>
      <type>jar</type>
      <version>3.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <type>jar</type>
      <version>1.12.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <type>jar</type>
      <version>4.5.12</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <type>jar</type>
      <version>4.4.13</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>3.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <type>jar</type>
      <version>5.2.7.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <type>jar</type>
      <version>5.2.7.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <type>jar</type>
      <version>5.2.7.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <type>jar</type>
      <version>5.2.7.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jcl</artifactId>
      <type>jar</type>
      <version>5.2.7.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <type>jar</type>
      <version>5.2.7.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-common-artifact-filters</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-artifact-transfer</artifactId>
      <type>jar</type>
      <version>0.13.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.30</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
      <type>jar</type>
      <version>4.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <type>jar</type>
      <version>1.20</version>
    </dependency>
    <dependency>
      <groupId>org.iq80.snappy</groupId>
      <artifactId>snappy</artifactId>
      <type>jar</type>
      <version>0.4</version>
    </dependency>
    <dependency>
      <groupId>org.tukaani</groupId>
      <artifactId>xz</artifactId>
      <type>jar</type>
      <version>1.8</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-io</artifactId>
      <type>jar</type>
      <version>3.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <type>jar</type>
      <version>2.3.30</version>
    </dependency>
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
      <type>jar</type>
      <version>2.1.2</version>
    </dependency>
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>javax.persistence-api</artifactId>
      <type>jar</type>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <type>jar</type>
      <version>2.0.1.Final</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <type>jar</type>
      <version>2.4.17</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <type>jar</type>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <type>jar</type>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>com.trilead</groupId>
      <artifactId>trilead-ssh2</artifactId>
      <type>jar</type>
      <version>1.0.0-build221</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.8.0</version>
    </dependency>
  </dependencies>
</plugin>